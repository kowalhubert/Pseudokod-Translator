Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SEMICOLON

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> INT ID EQ NUMBER EXECUTE
Rule 4     statement -> ID EQ expression EXECUTE
Rule 5     statement -> expression EXECUTE
Rule 6     statement -> ID comparison NUMBER EXECUTE
Rule 7     statement -> LPAREN ID comparison NUMBER RPAREN EXECUTE
Rule 8     statement -> IF ID comparison NUMBER COLON expression EXECUTE
Rule 9     statement -> WHILE ID comparison NUMBER COLON expression EXECUTE statements
Rule 10    statement -> FOR ID NUMBER NUMBER COLON expression EXECUTE statements
Rule 11    comparison -> LESSER
Rule 12    comparison -> GREATER
Rule 13    comparison -> EQUALS
Rule 14    comparison -> GTE
Rule 15    comparison -> LTE
Rule 16    comparison -> NEQ
Rule 17    expression -> expression PLUS term
Rule 18    expression -> expression MINUS term
Rule 19    expression -> expression TIMES term
Rule 20    expression -> expression DIVIDE term
Rule 21    expression -> expression POWER term
Rule 22    expression -> term
Rule 23    term -> NUMBER
Rule 24    term -> LPAREN expression RPAREN
Rule 25    term -> ID
Rule 26    expression -> SHOW LPAREN ID RPAREN
Rule 27    expression -> SHOW LPAREN NUMBER RPAREN

Terminals, with rules where they appear

COLON                : 8 9 10
DIVIDE               : 20
EQ                   : 3 4
EQUALS               : 13
EXECUTE              : 3 4 5 6 7 8 9 10
FOR                  : 10
GREATER              : 12
GTE                  : 14
ID                   : 3 4 6 7 8 9 10 25 26
IF                   : 8
INT                  : 3
LESSER               : 11
LPAREN               : 7 24 26 27
LTE                  : 15
MINUS                : 18
NEQ                  : 16
NUMBER               : 3 6 7 8 9 10 10 23 27
PLUS                 : 17
POWER                : 21
RPAREN               : 7 24 26 27
SEMICOLON            : 
SHOW                 : 26 27
TIMES                : 19
WHILE                : 9
error                : 

Nonterminals, with rules where they appear

comparison           : 6 7 8 9
expression           : 4 5 8 9 10 17 18 19 20 21 24
statement            : 1 2
statements           : 1 9 10 0
term                 : 17 18 19 20 21 22

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . INT ID EQ NUMBER EXECUTE
    (4) statement -> . ID EQ expression EXECUTE
    (5) statement -> . expression EXECUTE
    (6) statement -> . ID comparison NUMBER EXECUTE
    (7) statement -> . LPAREN ID comparison NUMBER RPAREN EXECUTE
    (8) statement -> . IF ID comparison NUMBER COLON expression EXECUTE
    (9) statement -> . WHILE ID comparison NUMBER COLON expression EXECUTE statements
    (10) statement -> . FOR ID NUMBER NUMBER COLON expression EXECUTE statements
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression POWER term
    (22) expression -> . term
    (26) expression -> . SHOW LPAREN ID RPAREN
    (27) expression -> . SHOW LPAREN NUMBER RPAREN
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    INT             shift and go to state 3
    ID              shift and go to state 4
    LPAREN          shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    SHOW            shift and go to state 12
    NUMBER          shift and go to state 5

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 6
    term                           shift and go to state 11

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . INT ID EQ NUMBER EXECUTE
    (4) statement -> . ID EQ expression EXECUTE
    (5) statement -> . expression EXECUTE
    (6) statement -> . ID comparison NUMBER EXECUTE
    (7) statement -> . LPAREN ID comparison NUMBER RPAREN EXECUTE
    (8) statement -> . IF ID comparison NUMBER COLON expression EXECUTE
    (9) statement -> . WHILE ID comparison NUMBER COLON expression EXECUTE statements
    (10) statement -> . FOR ID NUMBER NUMBER COLON expression EXECUTE statements
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression POWER term
    (22) expression -> . term
    (26) expression -> . SHOW LPAREN ID RPAREN
    (27) expression -> . SHOW LPAREN NUMBER RPAREN
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    INT             shift and go to state 3
    ID              shift and go to state 4
    LPAREN          shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    SHOW            shift and go to state 12
    NUMBER          shift and go to state 5

    statement                      shift and go to state 13
    expression                     shift and go to state 6
    term                           shift and go to state 11

state 2

    (2) statements -> statement .

    INT             reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    LPAREN          reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    SHOW            reduce using rule 2 (statements -> statement .)
    NUMBER          reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> INT . ID EQ NUMBER EXECUTE

    ID              shift and go to state 14


state 4

    (4) statement -> ID . EQ expression EXECUTE
    (6) statement -> ID . comparison NUMBER EXECUTE
    (25) term -> ID .
    (11) comparison -> . LESSER
    (12) comparison -> . GREATER
    (13) comparison -> . EQUALS
    (14) comparison -> . GTE
    (15) comparison -> . LTE
    (16) comparison -> . NEQ

    EQ              shift and go to state 15
    EXECUTE         reduce using rule 25 (term -> ID .)
    PLUS            reduce using rule 25 (term -> ID .)
    MINUS           reduce using rule 25 (term -> ID .)
    TIMES           reduce using rule 25 (term -> ID .)
    DIVIDE          reduce using rule 25 (term -> ID .)
    POWER           reduce using rule 25 (term -> ID .)
    LESSER          shift and go to state 17
    GREATER         shift and go to state 18
    EQUALS          shift and go to state 19
    GTE             shift and go to state 20
    LTE             shift and go to state 21
    NEQ             shift and go to state 22

    comparison                     shift and go to state 16

state 5

    (23) term -> NUMBER .

    EXECUTE         reduce using rule 23 (term -> NUMBER .)
    PLUS            reduce using rule 23 (term -> NUMBER .)
    MINUS           reduce using rule 23 (term -> NUMBER .)
    TIMES           reduce using rule 23 (term -> NUMBER .)
    DIVIDE          reduce using rule 23 (term -> NUMBER .)
    POWER           reduce using rule 23 (term -> NUMBER .)
    RPAREN          reduce using rule 23 (term -> NUMBER .)


state 6

    (5) statement -> expression . EXECUTE
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . POWER term

    EXECUTE         shift and go to state 23
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    POWER           shift and go to state 28


state 7

    (7) statement -> LPAREN . ID comparison NUMBER RPAREN EXECUTE
    (24) term -> LPAREN . expression RPAREN
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression POWER term
    (22) expression -> . term
    (26) expression -> . SHOW LPAREN ID RPAREN
    (27) expression -> . SHOW LPAREN NUMBER RPAREN
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    ID              shift and go to state 30
    SHOW            shift and go to state 12
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 29

    expression                     shift and go to state 31
    term                           shift and go to state 11

state 8

    (8) statement -> IF . ID comparison NUMBER COLON expression EXECUTE

    ID              shift and go to state 32


state 9

    (9) statement -> WHILE . ID comparison NUMBER COLON expression EXECUTE statements

    ID              shift and go to state 33


state 10

    (10) statement -> FOR . ID NUMBER NUMBER COLON expression EXECUTE statements

    ID              shift and go to state 34


state 11

    (22) expression -> term .

    EXECUTE         reduce using rule 22 (expression -> term .)
    PLUS            reduce using rule 22 (expression -> term .)
    MINUS           reduce using rule 22 (expression -> term .)
    TIMES           reduce using rule 22 (expression -> term .)
    DIVIDE          reduce using rule 22 (expression -> term .)
    POWER           reduce using rule 22 (expression -> term .)
    RPAREN          reduce using rule 22 (expression -> term .)


state 12

    (26) expression -> SHOW . LPAREN ID RPAREN
    (27) expression -> SHOW . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 35


state 13

    (1) statements -> statements statement .

    INT             reduce using rule 1 (statements -> statements statement .)
    ID              reduce using rule 1 (statements -> statements statement .)
    LPAREN          reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    SHOW            reduce using rule 1 (statements -> statements statement .)
    NUMBER          reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)


state 14

    (3) statement -> INT ID . EQ NUMBER EXECUTE

    EQ              shift and go to state 36


state 15

    (4) statement -> ID EQ . expression EXECUTE
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression POWER term
    (22) expression -> . term
    (26) expression -> . SHOW LPAREN ID RPAREN
    (27) expression -> . SHOW LPAREN NUMBER RPAREN
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    SHOW            shift and go to state 12
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 29
    ID              shift and go to state 37

    expression                     shift and go to state 38
    term                           shift and go to state 11

state 16

    (6) statement -> ID comparison . NUMBER EXECUTE

    NUMBER          shift and go to state 39


state 17

    (11) comparison -> LESSER .

    NUMBER          reduce using rule 11 (comparison -> LESSER .)


state 18

    (12) comparison -> GREATER .

    NUMBER          reduce using rule 12 (comparison -> GREATER .)


state 19

    (13) comparison -> EQUALS .

    NUMBER          reduce using rule 13 (comparison -> EQUALS .)


state 20

    (14) comparison -> GTE .

    NUMBER          reduce using rule 14 (comparison -> GTE .)


state 21

    (15) comparison -> LTE .

    NUMBER          reduce using rule 15 (comparison -> LTE .)


state 22

    (16) comparison -> NEQ .

    NUMBER          reduce using rule 16 (comparison -> NEQ .)


state 23

    (5) statement -> expression EXECUTE .

    INT             reduce using rule 5 (statement -> expression EXECUTE .)
    ID              reduce using rule 5 (statement -> expression EXECUTE .)
    LPAREN          reduce using rule 5 (statement -> expression EXECUTE .)
    IF              reduce using rule 5 (statement -> expression EXECUTE .)
    WHILE           reduce using rule 5 (statement -> expression EXECUTE .)
    FOR             reduce using rule 5 (statement -> expression EXECUTE .)
    SHOW            reduce using rule 5 (statement -> expression EXECUTE .)
    NUMBER          reduce using rule 5 (statement -> expression EXECUTE .)
    $end            reduce using rule 5 (statement -> expression EXECUTE .)


state 24

    (17) expression -> expression PLUS . term
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 29
    ID              shift and go to state 37

    term                           shift and go to state 40

state 25

    (18) expression -> expression MINUS . term
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 29
    ID              shift and go to state 37

    term                           shift and go to state 41

state 26

    (19) expression -> expression TIMES . term
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 29
    ID              shift and go to state 37

    term                           shift and go to state 42

state 27

    (20) expression -> expression DIVIDE . term
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 29
    ID              shift and go to state 37

    term                           shift and go to state 43

state 28

    (21) expression -> expression POWER . term
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 29
    ID              shift and go to state 37

    term                           shift and go to state 44

state 29

    (24) term -> LPAREN . expression RPAREN
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression POWER term
    (22) expression -> . term
    (26) expression -> . SHOW LPAREN ID RPAREN
    (27) expression -> . SHOW LPAREN NUMBER RPAREN
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    SHOW            shift and go to state 12
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 29
    ID              shift and go to state 37

    expression                     shift and go to state 31
    term                           shift and go to state 11

state 30

    (7) statement -> LPAREN ID . comparison NUMBER RPAREN EXECUTE
    (25) term -> ID .
    (11) comparison -> . LESSER
    (12) comparison -> . GREATER
    (13) comparison -> . EQUALS
    (14) comparison -> . GTE
    (15) comparison -> . LTE
    (16) comparison -> . NEQ

    RPAREN          reduce using rule 25 (term -> ID .)
    PLUS            reduce using rule 25 (term -> ID .)
    MINUS           reduce using rule 25 (term -> ID .)
    TIMES           reduce using rule 25 (term -> ID .)
    DIVIDE          reduce using rule 25 (term -> ID .)
    POWER           reduce using rule 25 (term -> ID .)
    LESSER          shift and go to state 17
    GREATER         shift and go to state 18
    EQUALS          shift and go to state 19
    GTE             shift and go to state 20
    LTE             shift and go to state 21
    NEQ             shift and go to state 22

    comparison                     shift and go to state 45

state 31

    (24) term -> LPAREN expression . RPAREN
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . POWER term

    RPAREN          shift and go to state 46
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    POWER           shift and go to state 28


state 32

    (8) statement -> IF ID . comparison NUMBER COLON expression EXECUTE
    (11) comparison -> . LESSER
    (12) comparison -> . GREATER
    (13) comparison -> . EQUALS
    (14) comparison -> . GTE
    (15) comparison -> . LTE
    (16) comparison -> . NEQ

    LESSER          shift and go to state 17
    GREATER         shift and go to state 18
    EQUALS          shift and go to state 19
    GTE             shift and go to state 20
    LTE             shift and go to state 21
    NEQ             shift and go to state 22

    comparison                     shift and go to state 47

state 33

    (9) statement -> WHILE ID . comparison NUMBER COLON expression EXECUTE statements
    (11) comparison -> . LESSER
    (12) comparison -> . GREATER
    (13) comparison -> . EQUALS
    (14) comparison -> . GTE
    (15) comparison -> . LTE
    (16) comparison -> . NEQ

    LESSER          shift and go to state 17
    GREATER         shift and go to state 18
    EQUALS          shift and go to state 19
    GTE             shift and go to state 20
    LTE             shift and go to state 21
    NEQ             shift and go to state 22

    comparison                     shift and go to state 48

state 34

    (10) statement -> FOR ID . NUMBER NUMBER COLON expression EXECUTE statements

    NUMBER          shift and go to state 49


state 35

    (26) expression -> SHOW LPAREN . ID RPAREN
    (27) expression -> SHOW LPAREN . NUMBER RPAREN

    ID              shift and go to state 50
    NUMBER          shift and go to state 51


state 36

    (3) statement -> INT ID EQ . NUMBER EXECUTE

    NUMBER          shift and go to state 52


state 37

    (25) term -> ID .

    EXECUTE         reduce using rule 25 (term -> ID .)
    PLUS            reduce using rule 25 (term -> ID .)
    MINUS           reduce using rule 25 (term -> ID .)
    TIMES           reduce using rule 25 (term -> ID .)
    DIVIDE          reduce using rule 25 (term -> ID .)
    POWER           reduce using rule 25 (term -> ID .)
    RPAREN          reduce using rule 25 (term -> ID .)


state 38

    (4) statement -> ID EQ expression . EXECUTE
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . POWER term

    EXECUTE         shift and go to state 53
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    POWER           shift and go to state 28


state 39

    (6) statement -> ID comparison NUMBER . EXECUTE

    EXECUTE         shift and go to state 54


state 40

    (17) expression -> expression PLUS term .

    EXECUTE         reduce using rule 17 (expression -> expression PLUS term .)
    PLUS            reduce using rule 17 (expression -> expression PLUS term .)
    MINUS           reduce using rule 17 (expression -> expression PLUS term .)
    TIMES           reduce using rule 17 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 17 (expression -> expression PLUS term .)
    POWER           reduce using rule 17 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 17 (expression -> expression PLUS term .)


state 41

    (18) expression -> expression MINUS term .

    EXECUTE         reduce using rule 18 (expression -> expression MINUS term .)
    PLUS            reduce using rule 18 (expression -> expression MINUS term .)
    MINUS           reduce using rule 18 (expression -> expression MINUS term .)
    TIMES           reduce using rule 18 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 18 (expression -> expression MINUS term .)
    POWER           reduce using rule 18 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 18 (expression -> expression MINUS term .)


state 42

    (19) expression -> expression TIMES term .

    EXECUTE         reduce using rule 19 (expression -> expression TIMES term .)
    PLUS            reduce using rule 19 (expression -> expression TIMES term .)
    MINUS           reduce using rule 19 (expression -> expression TIMES term .)
    TIMES           reduce using rule 19 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 19 (expression -> expression TIMES term .)
    POWER           reduce using rule 19 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 19 (expression -> expression TIMES term .)


state 43

    (20) expression -> expression DIVIDE term .

    EXECUTE         reduce using rule 20 (expression -> expression DIVIDE term .)
    PLUS            reduce using rule 20 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 20 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 20 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 20 (expression -> expression DIVIDE term .)
    POWER           reduce using rule 20 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 20 (expression -> expression DIVIDE term .)


state 44

    (21) expression -> expression POWER term .

    EXECUTE         reduce using rule 21 (expression -> expression POWER term .)
    PLUS            reduce using rule 21 (expression -> expression POWER term .)
    MINUS           reduce using rule 21 (expression -> expression POWER term .)
    TIMES           reduce using rule 21 (expression -> expression POWER term .)
    DIVIDE          reduce using rule 21 (expression -> expression POWER term .)
    POWER           reduce using rule 21 (expression -> expression POWER term .)
    RPAREN          reduce using rule 21 (expression -> expression POWER term .)


state 45

    (7) statement -> LPAREN ID comparison . NUMBER RPAREN EXECUTE

    NUMBER          shift and go to state 55


state 46

    (24) term -> LPAREN expression RPAREN .

    EXECUTE         reduce using rule 24 (term -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 24 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 24 (term -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 24 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 24 (term -> LPAREN expression RPAREN .)
    POWER           reduce using rule 24 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 24 (term -> LPAREN expression RPAREN .)


state 47

    (8) statement -> IF ID comparison . NUMBER COLON expression EXECUTE

    NUMBER          shift and go to state 56


state 48

    (9) statement -> WHILE ID comparison . NUMBER COLON expression EXECUTE statements

    NUMBER          shift and go to state 57


state 49

    (10) statement -> FOR ID NUMBER . NUMBER COLON expression EXECUTE statements

    NUMBER          shift and go to state 58


state 50

    (26) expression -> SHOW LPAREN ID . RPAREN

    RPAREN          shift and go to state 59


state 51

    (27) expression -> SHOW LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 60


state 52

    (3) statement -> INT ID EQ NUMBER . EXECUTE

    EXECUTE         shift and go to state 61


state 53

    (4) statement -> ID EQ expression EXECUTE .

    INT             reduce using rule 4 (statement -> ID EQ expression EXECUTE .)
    ID              reduce using rule 4 (statement -> ID EQ expression EXECUTE .)
    LPAREN          reduce using rule 4 (statement -> ID EQ expression EXECUTE .)
    IF              reduce using rule 4 (statement -> ID EQ expression EXECUTE .)
    WHILE           reduce using rule 4 (statement -> ID EQ expression EXECUTE .)
    FOR             reduce using rule 4 (statement -> ID EQ expression EXECUTE .)
    SHOW            reduce using rule 4 (statement -> ID EQ expression EXECUTE .)
    NUMBER          reduce using rule 4 (statement -> ID EQ expression EXECUTE .)
    $end            reduce using rule 4 (statement -> ID EQ expression EXECUTE .)


state 54

    (6) statement -> ID comparison NUMBER EXECUTE .

    INT             reduce using rule 6 (statement -> ID comparison NUMBER EXECUTE .)
    ID              reduce using rule 6 (statement -> ID comparison NUMBER EXECUTE .)
    LPAREN          reduce using rule 6 (statement -> ID comparison NUMBER EXECUTE .)
    IF              reduce using rule 6 (statement -> ID comparison NUMBER EXECUTE .)
    WHILE           reduce using rule 6 (statement -> ID comparison NUMBER EXECUTE .)
    FOR             reduce using rule 6 (statement -> ID comparison NUMBER EXECUTE .)
    SHOW            reduce using rule 6 (statement -> ID comparison NUMBER EXECUTE .)
    NUMBER          reduce using rule 6 (statement -> ID comparison NUMBER EXECUTE .)
    $end            reduce using rule 6 (statement -> ID comparison NUMBER EXECUTE .)


state 55

    (7) statement -> LPAREN ID comparison NUMBER . RPAREN EXECUTE

    RPAREN          shift and go to state 62


state 56

    (8) statement -> IF ID comparison NUMBER . COLON expression EXECUTE

    COLON           shift and go to state 63


state 57

    (9) statement -> WHILE ID comparison NUMBER . COLON expression EXECUTE statements

    COLON           shift and go to state 64


state 58

    (10) statement -> FOR ID NUMBER NUMBER . COLON expression EXECUTE statements

    COLON           shift and go to state 65


state 59

    (26) expression -> SHOW LPAREN ID RPAREN .

    EXECUTE         reduce using rule 26 (expression -> SHOW LPAREN ID RPAREN .)
    PLUS            reduce using rule 26 (expression -> SHOW LPAREN ID RPAREN .)
    MINUS           reduce using rule 26 (expression -> SHOW LPAREN ID RPAREN .)
    TIMES           reduce using rule 26 (expression -> SHOW LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 26 (expression -> SHOW LPAREN ID RPAREN .)
    POWER           reduce using rule 26 (expression -> SHOW LPAREN ID RPAREN .)
    RPAREN          reduce using rule 26 (expression -> SHOW LPAREN ID RPAREN .)


state 60

    (27) expression -> SHOW LPAREN NUMBER RPAREN .

    EXECUTE         reduce using rule 27 (expression -> SHOW LPAREN NUMBER RPAREN .)
    PLUS            reduce using rule 27 (expression -> SHOW LPAREN NUMBER RPAREN .)
    MINUS           reduce using rule 27 (expression -> SHOW LPAREN NUMBER RPAREN .)
    TIMES           reduce using rule 27 (expression -> SHOW LPAREN NUMBER RPAREN .)
    DIVIDE          reduce using rule 27 (expression -> SHOW LPAREN NUMBER RPAREN .)
    POWER           reduce using rule 27 (expression -> SHOW LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 27 (expression -> SHOW LPAREN NUMBER RPAREN .)


state 61

    (3) statement -> INT ID EQ NUMBER EXECUTE .

    INT             reduce using rule 3 (statement -> INT ID EQ NUMBER EXECUTE .)
    ID              reduce using rule 3 (statement -> INT ID EQ NUMBER EXECUTE .)
    LPAREN          reduce using rule 3 (statement -> INT ID EQ NUMBER EXECUTE .)
    IF              reduce using rule 3 (statement -> INT ID EQ NUMBER EXECUTE .)
    WHILE           reduce using rule 3 (statement -> INT ID EQ NUMBER EXECUTE .)
    FOR             reduce using rule 3 (statement -> INT ID EQ NUMBER EXECUTE .)
    SHOW            reduce using rule 3 (statement -> INT ID EQ NUMBER EXECUTE .)
    NUMBER          reduce using rule 3 (statement -> INT ID EQ NUMBER EXECUTE .)
    $end            reduce using rule 3 (statement -> INT ID EQ NUMBER EXECUTE .)


state 62

    (7) statement -> LPAREN ID comparison NUMBER RPAREN . EXECUTE

    EXECUTE         shift and go to state 66


state 63

    (8) statement -> IF ID comparison NUMBER COLON . expression EXECUTE
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression POWER term
    (22) expression -> . term
    (26) expression -> . SHOW LPAREN ID RPAREN
    (27) expression -> . SHOW LPAREN NUMBER RPAREN
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    SHOW            shift and go to state 12
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 29
    ID              shift and go to state 37

    expression                     shift and go to state 67
    term                           shift and go to state 11

state 64

    (9) statement -> WHILE ID comparison NUMBER COLON . expression EXECUTE statements
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression POWER term
    (22) expression -> . term
    (26) expression -> . SHOW LPAREN ID RPAREN
    (27) expression -> . SHOW LPAREN NUMBER RPAREN
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    SHOW            shift and go to state 12
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 29
    ID              shift and go to state 37

    expression                     shift and go to state 68
    term                           shift and go to state 11

state 65

    (10) statement -> FOR ID NUMBER NUMBER COLON . expression EXECUTE statements
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression POWER term
    (22) expression -> . term
    (26) expression -> . SHOW LPAREN ID RPAREN
    (27) expression -> . SHOW LPAREN NUMBER RPAREN
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    SHOW            shift and go to state 12
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 29
    ID              shift and go to state 37

    expression                     shift and go to state 69
    term                           shift and go to state 11

state 66

    (7) statement -> LPAREN ID comparison NUMBER RPAREN EXECUTE .

    INT             reduce using rule 7 (statement -> LPAREN ID comparison NUMBER RPAREN EXECUTE .)
    ID              reduce using rule 7 (statement -> LPAREN ID comparison NUMBER RPAREN EXECUTE .)
    LPAREN          reduce using rule 7 (statement -> LPAREN ID comparison NUMBER RPAREN EXECUTE .)
    IF              reduce using rule 7 (statement -> LPAREN ID comparison NUMBER RPAREN EXECUTE .)
    WHILE           reduce using rule 7 (statement -> LPAREN ID comparison NUMBER RPAREN EXECUTE .)
    FOR             reduce using rule 7 (statement -> LPAREN ID comparison NUMBER RPAREN EXECUTE .)
    SHOW            reduce using rule 7 (statement -> LPAREN ID comparison NUMBER RPAREN EXECUTE .)
    NUMBER          reduce using rule 7 (statement -> LPAREN ID comparison NUMBER RPAREN EXECUTE .)
    $end            reduce using rule 7 (statement -> LPAREN ID comparison NUMBER RPAREN EXECUTE .)


state 67

    (8) statement -> IF ID comparison NUMBER COLON expression . EXECUTE
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . POWER term

    EXECUTE         shift and go to state 70
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    POWER           shift and go to state 28


state 68

    (9) statement -> WHILE ID comparison NUMBER COLON expression . EXECUTE statements
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . POWER term

    EXECUTE         shift and go to state 71
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    POWER           shift and go to state 28


state 69

    (10) statement -> FOR ID NUMBER NUMBER COLON expression . EXECUTE statements
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . POWER term

    EXECUTE         shift and go to state 72
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    POWER           shift and go to state 28


state 70

    (8) statement -> IF ID comparison NUMBER COLON expression EXECUTE .

    INT             reduce using rule 8 (statement -> IF ID comparison NUMBER COLON expression EXECUTE .)
    ID              reduce using rule 8 (statement -> IF ID comparison NUMBER COLON expression EXECUTE .)
    LPAREN          reduce using rule 8 (statement -> IF ID comparison NUMBER COLON expression EXECUTE .)
    IF              reduce using rule 8 (statement -> IF ID comparison NUMBER COLON expression EXECUTE .)
    WHILE           reduce using rule 8 (statement -> IF ID comparison NUMBER COLON expression EXECUTE .)
    FOR             reduce using rule 8 (statement -> IF ID comparison NUMBER COLON expression EXECUTE .)
    SHOW            reduce using rule 8 (statement -> IF ID comparison NUMBER COLON expression EXECUTE .)
    NUMBER          reduce using rule 8 (statement -> IF ID comparison NUMBER COLON expression EXECUTE .)
    $end            reduce using rule 8 (statement -> IF ID comparison NUMBER COLON expression EXECUTE .)


state 71

    (9) statement -> WHILE ID comparison NUMBER COLON expression EXECUTE . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . INT ID EQ NUMBER EXECUTE
    (4) statement -> . ID EQ expression EXECUTE
    (5) statement -> . expression EXECUTE
    (6) statement -> . ID comparison NUMBER EXECUTE
    (7) statement -> . LPAREN ID comparison NUMBER RPAREN EXECUTE
    (8) statement -> . IF ID comparison NUMBER COLON expression EXECUTE
    (9) statement -> . WHILE ID comparison NUMBER COLON expression EXECUTE statements
    (10) statement -> . FOR ID NUMBER NUMBER COLON expression EXECUTE statements
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression POWER term
    (22) expression -> . term
    (26) expression -> . SHOW LPAREN ID RPAREN
    (27) expression -> . SHOW LPAREN NUMBER RPAREN
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    INT             shift and go to state 3
    ID              shift and go to state 4
    LPAREN          shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    SHOW            shift and go to state 12
    NUMBER          shift and go to state 5

    expression                     shift and go to state 6
    statements                     shift and go to state 73
    statement                      shift and go to state 2
    term                           shift and go to state 11

state 72

    (10) statement -> FOR ID NUMBER NUMBER COLON expression EXECUTE . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . INT ID EQ NUMBER EXECUTE
    (4) statement -> . ID EQ expression EXECUTE
    (5) statement -> . expression EXECUTE
    (6) statement -> . ID comparison NUMBER EXECUTE
    (7) statement -> . LPAREN ID comparison NUMBER RPAREN EXECUTE
    (8) statement -> . IF ID comparison NUMBER COLON expression EXECUTE
    (9) statement -> . WHILE ID comparison NUMBER COLON expression EXECUTE statements
    (10) statement -> . FOR ID NUMBER NUMBER COLON expression EXECUTE statements
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression POWER term
    (22) expression -> . term
    (26) expression -> . SHOW LPAREN ID RPAREN
    (27) expression -> . SHOW LPAREN NUMBER RPAREN
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

    INT             shift and go to state 3
    ID              shift and go to state 4
    LPAREN          shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    SHOW            shift and go to state 12
    NUMBER          shift and go to state 5

    expression                     shift and go to state 6
    statements                     shift and go to state 74
    statement                      shift and go to state 2
    term                           shift and go to state 11

state 73

    (9) statement -> WHILE ID comparison NUMBER COLON expression EXECUTE statements .
    (1) statements -> statements . statement
    (3) statement -> . INT ID EQ NUMBER EXECUTE
    (4) statement -> . ID EQ expression EXECUTE
    (5) statement -> . expression EXECUTE
    (6) statement -> . ID comparison NUMBER EXECUTE
    (7) statement -> . LPAREN ID comparison NUMBER RPAREN EXECUTE
    (8) statement -> . IF ID comparison NUMBER COLON expression EXECUTE
    (9) statement -> . WHILE ID comparison NUMBER COLON expression EXECUTE statements
    (10) statement -> . FOR ID NUMBER NUMBER COLON expression EXECUTE statements
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression POWER term
    (22) expression -> . term
    (26) expression -> . SHOW LPAREN ID RPAREN
    (27) expression -> . SHOW LPAREN NUMBER RPAREN
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for SHOW resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    $end            reduce using rule 9 (statement -> WHILE ID comparison NUMBER COLON expression EXECUTE statements .)
    INT             shift and go to state 3
    ID              shift and go to state 4
    LPAREN          shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    SHOW            shift and go to state 12
    NUMBER          shift and go to state 5

  ! INT             [ reduce using rule 9 (statement -> WHILE ID comparison NUMBER COLON expression EXECUTE statements .) ]
  ! ID              [ reduce using rule 9 (statement -> WHILE ID comparison NUMBER COLON expression EXECUTE statements .) ]
  ! LPAREN          [ reduce using rule 9 (statement -> WHILE ID comparison NUMBER COLON expression EXECUTE statements .) ]
  ! IF              [ reduce using rule 9 (statement -> WHILE ID comparison NUMBER COLON expression EXECUTE statements .) ]
  ! WHILE           [ reduce using rule 9 (statement -> WHILE ID comparison NUMBER COLON expression EXECUTE statements .) ]
  ! FOR             [ reduce using rule 9 (statement -> WHILE ID comparison NUMBER COLON expression EXECUTE statements .) ]
  ! SHOW            [ reduce using rule 9 (statement -> WHILE ID comparison NUMBER COLON expression EXECUTE statements .) ]
  ! NUMBER          [ reduce using rule 9 (statement -> WHILE ID comparison NUMBER COLON expression EXECUTE statements .) ]

    expression                     shift and go to state 6
    statement                      shift and go to state 13
    term                           shift and go to state 11

state 74

    (10) statement -> FOR ID NUMBER NUMBER COLON expression EXECUTE statements .
    (1) statements -> statements . statement
    (3) statement -> . INT ID EQ NUMBER EXECUTE
    (4) statement -> . ID EQ expression EXECUTE
    (5) statement -> . expression EXECUTE
    (6) statement -> . ID comparison NUMBER EXECUTE
    (7) statement -> . LPAREN ID comparison NUMBER RPAREN EXECUTE
    (8) statement -> . IF ID comparison NUMBER COLON expression EXECUTE
    (9) statement -> . WHILE ID comparison NUMBER COLON expression EXECUTE statements
    (10) statement -> . FOR ID NUMBER NUMBER COLON expression EXECUTE statements
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression POWER term
    (22) expression -> . term
    (26) expression -> . SHOW LPAREN ID RPAREN
    (27) expression -> . SHOW LPAREN NUMBER RPAREN
    (23) term -> . NUMBER
    (24) term -> . LPAREN expression RPAREN
    (25) term -> . ID

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for SHOW resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    $end            reduce using rule 10 (statement -> FOR ID NUMBER NUMBER COLON expression EXECUTE statements .)
    INT             shift and go to state 3
    ID              shift and go to state 4
    LPAREN          shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    SHOW            shift and go to state 12
    NUMBER          shift and go to state 5

  ! INT             [ reduce using rule 10 (statement -> FOR ID NUMBER NUMBER COLON expression EXECUTE statements .) ]
  ! ID              [ reduce using rule 10 (statement -> FOR ID NUMBER NUMBER COLON expression EXECUTE statements .) ]
  ! LPAREN          [ reduce using rule 10 (statement -> FOR ID NUMBER NUMBER COLON expression EXECUTE statements .) ]
  ! IF              [ reduce using rule 10 (statement -> FOR ID NUMBER NUMBER COLON expression EXECUTE statements .) ]
  ! WHILE           [ reduce using rule 10 (statement -> FOR ID NUMBER NUMBER COLON expression EXECUTE statements .) ]
  ! FOR             [ reduce using rule 10 (statement -> FOR ID NUMBER NUMBER COLON expression EXECUTE statements .) ]
  ! SHOW            [ reduce using rule 10 (statement -> FOR ID NUMBER NUMBER COLON expression EXECUTE statements .) ]
  ! NUMBER          [ reduce using rule 10 (statement -> FOR ID NUMBER NUMBER COLON expression EXECUTE statements .) ]

    expression                     shift and go to state 6
    statement                      shift and go to state 13
    term                           shift and go to state 11
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 73 resolved as shift
WARNING: shift/reduce conflict for ID in state 73 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 73 resolved as shift
WARNING: shift/reduce conflict for FOR in state 73 resolved as shift
WARNING: shift/reduce conflict for SHOW in state 73 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 73 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for ID in state 74 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for SHOW in state 74 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 74 resolved as shift
